type Post
@model(subscriptions: null)
@auth(rules: [
    {allow: public, operations: [read]},# public access for read
    {allow: owner, ownerField: "username"}, # full access to owner, owner mapped by username field
])
@key(name: "postByUsername", fields: ["username"], queryField: "postByUsername")
{
    id: ID!
    title: String!
    description: String!
    content: String!
    image: String
    username: String
    comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
}

type Comment
@model
@key(name: "byPost", fields: ["postID", "content"])
@auth(rules: [
    {allow: public, operations: [read]},# public access for read
    {allow: owner, ownerField: "username"}, # full access to owner, owner mapped by username field
])
{
    id: ID!
    postID: ID!
    username: String
    post: Post @connection(fields: ["postID"])
    content: String!
}

type Subscription {
    onCreatePost: Post @aws_subscribe(mutations: ["createPost"]) @aws_api_key
    onUpdatePost: Post @aws_subscribe(mutations: ["updatePost"]) @aws_api_key
}
